<?xml version="1.0"?>

<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
	<!ENTITY app_lic SYSTEM "gpl-2.0.xml">
]>

<article lang="en">

	<articleinfo>
		<title>NppTags</title>
		<subtitle>Exuberant CTags plug-in for Notepad++</subtitle>
		<author><firstname>Frank</firstname><surname>Fesevur</surname></author>
		<pubdate>2013-07-14</pubdate>
	</articleinfo>

	<sect1 id="introduction">
		<title>Introduction</title>
		<para>NppTags is a <ulink url="http://ctags.sourceforge.net/">Exuberant CTags</ulink> plug-in for <ulink url="http://www.notepad-plus-plus.org/">Notepad++</ulink>.</para>
		<para>When you use Notepad++ to program in a popular programming language (like C, C++, Java, JavaScript, PHP), ctags can be very useful for you. It creates a so called tags file that can be used to navigate through your sources. This plug-in can help you to jump to a selected function / variable / class / etc in your code by pressing just one key!</para>
	</sect1>

	<sect1 id="install">
		<title>Installation Note</title>
		<para>To manually install the plug-in, copy <computeroutput>NppTags.dll</computeroutput> to the <computeroutput>plugins</computeroutput> directory. There you need to create a directory <computeroutput>NppTags</computeroutput> and copy <computeroutput>ctags.exe</computeroutput> to that directory. Then (re)start Notepad++.</para>
	</sect1>

	<sect1 id="history">
		<title>History</title>
		<para>There are several ctags based plug-ins for Notepad++, but none of them really fits my needs. There are to limited (only jump, just one file, based upon line numbers, etc) or to slow at startup. Back in 2002 and 2003 I wrote an add-on for TextPad named <ulink url="http://findtag.sourceforge.net/">FindTag</ulink>. I used this code base to create my own ctags based plug-in for Notepad++.</para>
	</sect1>

	<sect1 id="howtouse">
		<title>How to use this plug-in</title>
		<para>To use this plug-in you first need to generate a tags database in the directory of the current source file by pressing the <computeroutput>Generate</computeroutput> button in the toolbar. This will first generate a tags file using the ctags program which is converted to a <ulink url="http://www.sqlite.org/">SQLite</ulink> database directly after that. This tags database is used by the plug-in.</para>
		<para>This plug-in has two different ways to use:</para>
		<itemizedlist>
			<listitem><para>"Jump to Tag" tries to find the tag (function, variable, etc) under the cursor. If you want to jump to this tag simply press the assigned button (default <computeroutput>Alt+Q</computeroutput>) or the button in the toolbar. If there is only one reference found, you will be taken to it. Otherwise a dialog is shown where you can select the right one.</para></listitem>
			<listitem><para>The tree shows all (recognized) tags in a tree. You can double-click on a tag in the tree and you will be taken to it.</para></listitem>
		</itemizedlist>
	</sect1>

	<sect1 id="tree">
		<title>Tree</title>
		<para>Since ctags supports so many programming languages, it is impossible for me to add support for all these languages to the tree instantly.</para>
		<para>Based upon a combination of the documentation of ctags and personal testing, these languages should work reasonably well:</para>
		<itemizedlist>
			<listitem><para>Classic ASP</para></listitem>
			<listitem><para>C / C++</para></listitem>
			<listitem><para>C#, without namespaces</para></listitem>
			<listitem><para>Java, without packages</para></listitem>
			<listitem><para>JavaScript</para></listitem>
			<listitem><para>PHP</para></listitem>
			<listitem><para>Python</para></listitem>
		</itemizedlist>
		<para>If your programming language isn't in the list and/or your type of tags don't show (properly) in the tree, <link linkend="contact">contact me</link> because it is probably not too difficult to add/improve support for other languages and/or types.</para>
		<para>Note that this it only affects the tree, "Jump to Tag" shouldn't have any problem.</para>
	</sect1>

	<sect1 id="inidebug">
		<title>Debug section in NppTags.ini</title>
		<para>For debugging it can be necessary to see the raw tags file. You can manually add an extra section with read-only options to the <computeroutput>NppTags.ini</computeroutput> to control what happens to the automatically generated tags file. These are the default settings:</para>
		<screen>
			[Debug]
			DelTags=1
			OverwriteTags=1
		</screen>
		<para>When <computeroutput>DelTags</computeroutput> is set to <computeroutput>0</computeroutput> the plug-in will not delete the generated tags file after it is converted to the database.</para>
		<para>When <computeroutput>OverwriteTags</computeroutput> is set to <computeroutput>0</computeroutput> and a tags file is found the plug-in will not overwrite and regenerate this existing tags file before generating the database. When set to 0, this implies that <computeroutput>DelTags</computeroutput> is set to <computeroutput>0</computeroutput> as well.</para>
	</sect1>

	<sect1 id="contact">
		<title>Contact</title>
		<para>The plug-in's web page can be found at <ulink url="https://code.google.com/p/npptags/">https://code.google.com/p/npptags/</ulink>. The downloads and issue tracker can be found there as well. The git repository is at <ulink url="https://github.com/ffes/npptags">https://github.com/ffes/npptags</ulink>.</para>
		<para>If you have problems with, questions about or suggestions for NppTags and you want to contact me directly, you can send me an email at <ulink url="mailto:fesevur@gmail.com">fesevur@gmail.com</ulink>.</para>
	</sect1>

	<sect1 id="license">
		<title>License</title>
		<para>This plug-in is published under the GPL-2 license. See <xref linkend="gpl"/> for the full license agreement. You can find the sources of the latest version at the <ulink url="https://code.google.com/p/npptags/">Google code project page</ulink> or find the latest developments at <ulink url="https://github.com/ffes/npptags">GitHub</ulink>.</para>
		<para>This plug-in relies on <ulink url="http://ctags.sourceforge.net/">Exuberant CTags</ulink> to recognise the tags. Exuberant CTags is released under GPL-2 as well and the source code of Exuberant CTags can be found at their <ulink url="http://ctags.sourceforge.net/">website</ulink>.</para>
	</sect1>

	<sect1 id="faq">
		<title>Frequently Asked Questions</title>
		<qandaset>
			<qandaentry>
				<question id="faq_general_1"><para>
					Does NppTags recognize tags in language 'XYZ'?
				</para></question>
				<answer><para>
					NppTags relies on <ulink url="http://ctags.sourceforge.net/">Exuberant CTags</ulink> for the recognition of tags. So please check the documentation of Exuberant CTags to see if your language is supported by Exuberant CTags. If not, you have to contact the Exuberant CTags team to see if they want to add support for your programming language. If Exuberant CTags supports your language "Jump to Tag" should have no problems, but the tree could not show all tags.
				</para></answer>
			</qandaentry>
			<!--qandaentry>
				<question id="faq_general_2"><para>
					How can I use NppTags when the sources are in a directory tree?
				</para></question>
				<answer><para>
					There are several ways. When you want to use one tags file for the entire tree, you need to set the Initial Folder of the Tools and set 'Always use full paths in the tags file' in the options.<br/>
					When you work with only one directory tree, you can set the Initial Folder to a full path.<br/>
					When you don't want this you could use a Workspace (located in the root of this directory tree) and set the Initial Folder to $WspDir. When you have a workspace loaded, this will put the tags in the same directory where the workspace is located. But if no workspace is loaded, it will work just like $FileDir.
				</para></answer>
			</qandaentry-->
			<qandaentry>
				<question id="faq_general_3"><para>
					I want to add extra command line options when ctags generates the tags file. Can this be done?
				</para></question>
				<answer>
					<para>
						If you want to add extra command line options to ctags, use a ctags.cnf file. It can be placed in the current directory for local settings or in your user directory for global settings. See the <ulink url="http://ctags.sourceforge.net/ctags.html#FILES">Files section</ulink> in the documentation of ctags for more details.
					</para>
				</answer>
			</qandaentry>
			<qandaentry>
				<question id="faq_general_4"><para>
					Why are the languages C and C++ are displayed as 'C/C++'?
				</para></question>
				<answer><para>
					This is done because .h files are standard marked as C++ by ctags. And for tags there is not too much difference between C and C++ to not combine them.
				</para></answer>
			</qandaentry>
			<qandaentry>
				<question id="faq_general_5"><para>
					When I jump to a tag it misses it by a few lines or it can not find it at all.
				</para></question>
				<answer><para>
					You probably need to regenerate the tags database by pressing generate button.
				</para></answer>
			</qandaentry>

<!--
Do not try to use this tool in the root directory (c:\) of a harddisk. Because of the ctags -R flag it will search your entire disk for source files.
-->

		</qandaset>
	</sect1>

	<sect1 id="wishlist">
		<title>Wish list</title>
		<itemizedlist>
			<listitem><para>Internally always use WCHARS for filenames</para></listitem>
			<listitem><para>Add an Options dialog</para></listitem>
			<listitem><para>Better support for C# namespaces and Java packages.</para></listitem>
			<listitem><para>Better support for sources stored in various subdirectories.</para></listitem>
			<listitem><para>Add an option to set a path to a secondary tags database. If the tag is not found in the default tags database, the secondary one should be searched. Such a tags database can be created from the root of your programming environment to search the standard libraries. Where to find this secondary database could be based upon the language of current document, or a tags database option.</para></listitem>
			<listitem><para>Nest enums and structs in C++ classes in the tree.</para></listitem>
			<listitem><para>Auto-completion based upon the tags database.</para></listitem>
			<listitem><para>"Jump Back" to bring you back to the position where when you jumped to a tag.</para></listitem>
			<listitem><para>Show details about the selected tag in the tree.</para></listitem>
			<listitem><para>Options per tags database. Preserve those settings when the database is regenerated.</para></listitem>
		</itemizedlist>
	</sect1>

	<sect1 id="knownissues">
		<title>Known Issues</title>
		<itemizedlist>
			<listitem><para>When you double-click in the tree the focus will not return to the edit window. I use the code from NppSnippets where it just works, but here is doesn't work. The context menu item "Jump to Tag" does work as expected.</para></listitem>
		</itemizedlist>
	</sect1>

	<sect1 id="revhistory">
		<title>Revision History</title>

		<sect2 id="v0_2_0">
			<title>Version 0.2.0, XX September 2013</title>
			<itemizedlist>
				<listitem><para>First public release, external proof of concept</para></listitem>
				<listitem><para>After generating the tags file, it is now converted to a SQLite database. This makes it much easier and faster to build a proper tree.</para></listitem>
				<listitem><para>Tree filled with common types of tags for various languages. Still far from perfect.</para></listitem>
				<listitem><para>In the Select Tag dialog, preselect the first tag in the current file.</para></listitem>
				<listitem><para>Show a separate root item per language, if more then one language is found.</para></listitem>
				<listitem><para>Using a SVN (rev 804) based build of ctags for better JavaScript support.</para></listitem>
				<listitem><para>Upgrade to SQLite version 3.8.0.2</para></listitem>
			</itemizedlist>
		</sect2>

		<sect2 id="v0_1_1">
			<title>Version 0.1.1, 5 July 2013</title>
			<itemizedlist>
				<listitem><para>Tree now filled with functions.</para></listitem>
				<listitem><para>Added three toolbar buttons.</para></listitem>
			</itemizedlist>
		</sect2>

		<sect2 id="v0_1_0">
			<title>Version 0.1.0, 30 June 2013</title>
			<itemizedlist>
				<listitem><para>Internal proof of concept</para></listitem>
			</itemizedlist>
		</sect2>

	</sect1>

	&app_lic;

</article>
